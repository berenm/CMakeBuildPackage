set(__CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH}")
list(REMOVE_ITEM CMAKE_PREFIX_PATH "${CMAKE_CURRENT_LIST_DIR}")

set(package boost)
set(module Boost)

if (${package}_FIND_VERSION_EXACT)
  find_package(${module} ${${package}_FIND_VERSION} EXACT QUIET MODULE REQUIRED COMPONENTS ${${package}_FIND_COMPONENTS})
else()
  find_package(${module} ${${package}_FIND_VERSION} QUIET MODULE REQUIRED COMPONENTS ${${package}_FIND_COMPONENTS})
endif()

set(PACKAGE_VERSION "${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}")
if (PACKAGE_VERSION VERSION_EQUAL PACKAGE_FIND_VERSION)
  set(PACKAGE_VERSION_EXACT TRUE)
  set(PACKAGE_VERSION_COMPATIBLE TRUE)
  set(PACKAGE_VERSION_UNSUITABLE FALSE)
elseif (PACKAGE_VERSION VERSION_GREATER PACKAGE_FIND_VERSION)
  set(PACKAGE_VERSION_EXACT FALSE)
  set(PACKAGE_VERSION_COMPATIBLE TRUE)
  set(PACKAGE_VERSION_UNSUITABLE FALSE)
else (PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION)
  set(PACKAGE_VERSION_EXACT FALSE)
  set(PACKAGE_VERSION_COMPATIBLE FALSE)
  set(PACKAGE_VERSION_UNSUITABLE TRUE)
  return()
endif()

if (${package}_FIND_COMPONENTS)
  foreach(component IN ITEMS ${${package}_FIND_COMPONENTS})
    if (NOT TARGET ${package}::${component})
      add_library(${package}::${component} INTERFACE IMPORTED GLOBAL)
      set_target_properties(${package}::${component} PROPERTIES INTERFACE_LINK_LIBRARIES ${module}::${component})
      message(STATUS "Found ${package}::${component} ${PACKAGE_VERSION} (system)")
    endif()
  endforeach()
else()
  if (NOT TARGET ${package}::${package})
    add_library(${package}::${package} INTERFACE IMPORTED GLOBAL)
    set_target_properties(${package}::${package} PROPERTIES INTERFACE_LINK_LIBRARIES ${module}::${package})
    message(STATUS "Found ${package} ${PACKAGE_VERSION} (system)")
  endif()
endif()

set(CMAKE_PREFIX_PATH "${__CMAKE_PREFIX_PATH}")
